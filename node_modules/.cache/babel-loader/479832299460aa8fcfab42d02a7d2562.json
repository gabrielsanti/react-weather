{"ast":null,"code":"import _regeneratorRuntime from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gabriel/Workspace/react-weather/src/components/App.js\";\nimport React from \"react\";\nimport Today from \"./Today\";\nimport Forecast from \"./Forecast\";\nimport \"./App.css\";\nvar Api_Key = '5c50080aa56953849755237b005e9f6f';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.getWeather =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var city, country, api_call, response, forecast_api_call, forecast_response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              city = 'Castelfidardo';\n              country = 'Italy'; // Current weather api call\n\n              _context.next = 4;\n              return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&units=metric&appid=\").concat(Api_Key));\n\n            case 4:\n              api_call = _context.sent;\n              _context.next = 7;\n              return api_call.json();\n\n            case 7:\n              response = _context.sent;\n              _context.next = 10;\n              return fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&units=metric&cnt=6&appid=\").concat(Api_Key));\n\n            case 10:\n              forecast_api_call = _context.sent;\n              _context.next = 13;\n              return forecast_api_call.json();\n\n            case 13:\n              forecast_response = _context.sent;\n\n              if (city && country) {\n                _this.setState({\n                  temperature: response.main.temp,\n                  city: response.name,\n                  country: response.sys.country,\n                  description: response.weather[0].main,\n                  icon: response.weather[0].icon,\n                  forecast: forecast_response.list,\n                  error: \"\"\n                });\n              } else {\n                _this.setState({\n                  error: \"Please input search values...\"\n                });\n              }\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.componentDidMount = function () {\n      _this.getWeather();\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Today, {\n        temperature: this.state.temperature,\n        city: this.state.city,\n        country: this.state.country,\n        description: this.state.description,\n        icon: this.state.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Forecast, {\n        forecast: this.state.forecast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/gabriel/Workspace/react-weather/src/components/App.js"],"names":["React","Today","Forecast","Api_Key","App","getWeather","city","country","fetch","api_call","json","response","forecast_api_call","forecast_response","setState","temperature","main","temp","name","sys","description","weather","icon","forecast","list","error","componentDidMount","state","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;AAEA,IAAMC,OAAO,GAAG,kCAAhB;;IAEMC,G;;;;;;;;;;;;;;;;;UAGJC,U;;;;6BAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,cAAAA,IAFK,GAEE,eAFF;AAGLC,cAAAA,OAHK,GAGK,OAHL,EAKX;;AALW;AAAA,qBAMYC,KAAK,4DAAqDF,IAArD,cAA6DC,OAA7D,iCAA2FJ,OAA3F,EANjB;;AAAA;AAMLM,cAAAA,QANK;AAAA;AAAA,qBAOYA,QAAQ,CAACC,IAAT,EAPZ;;AAAA;AAOLC,cAAAA,QAPK;AAAA;AAAA,qBAUqBH,KAAK,6DAAsDF,IAAtD,cAA8DC,OAA9D,uCAAkGJ,OAAlG,EAV1B;;AAAA;AAULS,cAAAA,iBAVK;AAAA;AAAA,qBAWqBA,iBAAiB,CAACF,IAAlB,EAXrB;;AAAA;AAWLG,cAAAA,iBAXK;;AAaX,kBAAIP,IAAI,IAAIC,OAAZ,EAAoB;AAElB,sBAAKO,QAAL,CAAc;AACZC,kBAAAA,WAAW,EAAEJ,QAAQ,CAACK,IAAT,CAAcC,IADf;AAEZX,kBAAAA,IAAI,EAAEK,QAAQ,CAACO,IAFH;AAGZX,kBAAAA,OAAO,EAAEI,QAAQ,CAACQ,GAAT,CAAaZ,OAHV;AAIZa,kBAAAA,WAAW,EAAET,QAAQ,CAACU,OAAT,CAAiB,CAAjB,EAAoBL,IAJrB;AAKZM,kBAAAA,IAAI,EAAEX,QAAQ,CAACU,OAAT,CAAiB,CAAjB,EAAoBC,IALd;AAMZC,kBAAAA,QAAQ,EAAEV,iBAAiB,CAACW,IANhB;AAOZC,kBAAAA,KAAK,EAAE;AAPK,iBAAd;AAWD,eAbD,MAaO;AACL,sBAAKX,QAAL,CAAc;AACZW,kBAAAA,KAAK,EAAE;AADK,iBAAd;AAGD;;AA9BU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAiCbC,iB,GAAoB,YAAM;AACxB,YAAKrB,UAAL;AACD,K;;;;;;;6BAEQ;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AACG,QAAA,WAAW,EAAE,KAAKsB,KAAL,CAAWZ,WAD3B;AAEG,QAAA,IAAI,EAAE,KAAKY,KAAL,CAAWrB,IAFpB;AAGG,QAAA,OAAO,EAAE,KAAKqB,KAAL,CAAWpB,OAHvB;AAIG,QAAA,WAAW,EAAE,KAAKoB,KAAL,CAAWP,WAJ3B;AAKG,QAAA,IAAI,EAAE,KAAKO,KAAL,CAAWL,IALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAQE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWJ,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAcD;;;;EAxDevB,KAAK,CAAC4B,S;;AA0DxB,eAAexB,GAAf","sourcesContent":["import React from \"react\";\nimport Today from \"./Today\"\nimport Forecast from \"./Forecast\";\nimport \"./App.css\";\n\nconst Api_Key = '5c50080aa56953849755237b005e9f6f';\n\nclass App extends React.Component {\n\n  //getWeather is a method we'll use to make the api call\n  getWeather = async () => {\n\n    const city = 'Castelfidardo'\n    const country = 'Italy'; \n\n    // Current weather api call\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=metric&appid=${Api_Key}`);\n    const response = await api_call.json();\n\n    // Forecast weather api call\n    const forecast_api_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&units=metric&cnt=6&appid=${Api_Key}`);\n    const forecast_response = await forecast_api_call.json();\n\n    if (city && country){      \n\n      this.setState({\n        temperature: response.main.temp,\n        city: response.name,\n        country: response.sys.country,\n        description: response.weather[0].main,\n        icon: response.weather[0].icon,\n        forecast: forecast_response.list,        \n        error: \"\"\n      })\n\n      \n    } else {\n      this.setState({\n        error: \"Please input search values...\"\n      })\n    }\n  }\n\n  componentDidMount = () => {\n    this.getWeather();\n  }\n  \n  render() {\n\n    return (\n      <div className=\"box\">\n      \t<Today \n          temperature={this.state.temperature} \n          city={this.state.city} \n          country={this.state.country} \n          description={this.state.description} \n          icon={this.state.icon} \n        />\n        <Forecast forecast={this.state.forecast} />\n      \t\n     \n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}