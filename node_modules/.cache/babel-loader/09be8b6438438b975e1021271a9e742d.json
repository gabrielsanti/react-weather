{"ast":null,"code":"import _regeneratorRuntime from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gabriel/Workspace/react-weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gabriel/Workspace/react-weather/src/components/App.js\";\nimport React from \"react\";\nimport Today from \"./Today\";\nimport Day from \"./Day\";\nimport \"./App.css\";\nvar Api_Key = '5c50080aa56953849755237b005e9f6f';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined,\n      forecast: {\n        data: undefined\n      } //getWeather is a method we'll use to make the api call\n\n    };\n    _this.getWeather =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var city, country, api_call, response, forecast_api_call, forecast_response, getDayName, _day, _day2, _day3, _day4, _day5, count, forecast;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              getDayName = function _ref2(dateString) {\n                var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n                var d = new Date(dateString);\n                var dayName = days[d.getDay()];\n                return dayName;\n              };\n\n              city = 'Castelfidardo';\n              country = 'Italy'; // Current weather api call\n\n              _context.next = 5;\n              return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&units=metric&appid=\").concat(Api_Key));\n\n            case 5:\n              api_call = _context.sent;\n              _context.next = 8;\n              return api_call.json();\n\n            case 8:\n              response = _context.sent;\n              _context.next = 11;\n              return fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&units=metric&cnt=6&appid=\").concat(Api_Key));\n\n            case 11:\n              forecast_api_call = _context.sent;\n              _context.next = 14;\n              return forecast_api_call.json();\n\n            case 14:\n              forecast_response = _context.sent;\n              console.log(forecast_response);\n\n              if (city && country) {\n                count = 0;\n                forecast = Object;\n                forecast_response.list.map(function (forecasProp, i) {\n                  forecast.day[count].i = forecasProp;\n                  count++;\n                });\n                console.log(forecast);\n\n                _this.setState({\n                  temperature: response.main.temp,\n                  city: response.name,\n                  country: response.sys.country,\n                  description: response.weather[0].main,\n                  icon: response.weather[0].icon,\n                  forecast: {\n                    day1: (_day = {\n                      name: getDayName(forecast_response.list[1].dt_txt),\n                      tmp_max: forecast_response.list[1].main.temp_max\n                    }, _defineProperty(_day, \"tmp_max\", forecast_response.list[1].main.temp_min), _defineProperty(_day, \"icon\", forecast_response.list[1].weather[0].icon), _day),\n                    day2: (_day2 = {\n                      name: getDayName(forecast_response.list[2].dt_txt),\n                      tmp_max: forecast_response.list[2].main.temp_max\n                    }, _defineProperty(_day2, \"tmp_max\", forecast_response.list[2].main.temp_min), _defineProperty(_day2, \"icon\", forecast_response.list[2].weather[0].icon), _day2),\n                    day3: (_day3 = {\n                      name: getDayName(forecast_response.list[3].dt_txt),\n                      tmp_max: forecast_response.list[3].main.temp_max\n                    }, _defineProperty(_day3, \"tmp_max\", forecast_response.list[3].main.temp_min), _defineProperty(_day3, \"icon\", forecast_response.list[3].weather[0].icon), _day3),\n                    day4: (_day4 = {\n                      name: getDayName(forecast_response.list[4].dt_txt),\n                      tmp_max: forecast_response.list[4].main.temp_max\n                    }, _defineProperty(_day4, \"tmp_max\", forecast_response.list[4].main.temp_min), _defineProperty(_day4, \"icon\", forecast_response.list[4].weather[0].icon), _day4),\n                    day5: (_day5 = {\n                      name: getDayName(forecast_response.list[5].dt_txt),\n                      tmp_max: forecast_response.list[5].main.temp_max\n                    }, _defineProperty(_day5, \"tmp_max\", forecast_response.list[5].main.temp_min), _defineProperty(_day5, \"icon\", forecast_response.list[5].weather[0].icon), _day5)\n                  },\n                  error: \"\"\n                });\n\n                console.log(_this.state);\n              } else {\n                _this.setState({\n                  error: \"Please input search values...\"\n                });\n              }\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.componentDidMount = function () {\n      _this.getWeather();\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Today, {\n        temperature: this.state.temperature,\n        city: this.state.city,\n        country: this.state.country,\n        description: this.state.description,\n        icon: this.state.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"forecast\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Day, {\n        dayname: this.state.forecast.day1.name,\n        tmpMax: this.state.forecast.day1.tmp_max,\n        tmpMin: this.state.forecast.day1.tmp_min,\n        iconName: this.state.forecast.day1.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Day, {\n        dayname: this.state.forecast.day2.name,\n        tmpMax: this.state.forecast.day2.tmp_max,\n        tmpMin: this.state.forecast.day2.tmp_min,\n        iconName: this.state.forecast.day2.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Day, {\n        dayname: this.state.forecast.day3.name,\n        tmpMax: this.state.forecast.day3.tmp_max,\n        tmpMin: this.state.forecast.day3.tmp_min,\n        iconName: this.state.forecast.day3.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Day, {\n        dayname: this.state.forecast.day4.name,\n        tmpMax: this.state.forecast.day4.tmp_max,\n        tmpMin: this.state.forecast.day4.tmp_min,\n        iconName: this.state.forecast.day4.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(Day, {\n        dayname: this.state.forecast.day5.name,\n        tmpMax: this.state.forecast.day5.tmp_max,\n        tmpMin: this.state.forecast.day5.tmp_min,\n        iconName: this.state.forecast.day5.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/gabriel/Workspace/react-weather/src/components/App.js"],"names":["React","Today","Day","Api_Key","App","state","temperature","undefined","city","country","humidity","description","error","forecast","data","getWeather","getDayName","dateString","days","d","Date","dayName","getDay","fetch","api_call","json","response","forecast_api_call","forecast_response","console","log","count","Object","list","map","forecasProp","i","day","setState","main","temp","name","sys","weather","icon","day1","dt_txt","tmp_max","temp_max","temp_min","day2","day3","day4","day5","componentDidMount","tmp_min","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Today from \"./Today\"\nimport Day from \"./Day\";\nimport \"./App.css\";\n\nconst Api_Key = '5c50080aa56953849755237b005e9f6f';\n\nclass App extends React.Component {\nstate = {\n\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined,\n    forecast: {\n      data: undefined\n    }\n  }\n\n  //getWeather is a method we'll use to make the api call\n  getWeather = async () => {\n\n    const city = 'Castelfidardo'\n    const country = 'Italy'; \n\n    // Current weather api call\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=metric&appid=${Api_Key}`);\n    const response = await api_call.json();\n\n    // Forecast weather api call\n    const forecast_api_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&units=metric&cnt=6&appid=${Api_Key}`);\n    const forecast_response = await forecast_api_call.json();\n\n    console.log(forecast_response);\n\n    function getDayName(dateString) {\n      var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n      var d = new Date(dateString);\n      var dayName = days[d.getDay()];\n      return dayName;\n    }\n\n    if (city && country){\n      var count = 0;\n      var forecast = Object;\n      forecast_response.list.map((forecasProp, i) => {\n        forecast.day[count].i = forecasProp;\n        count++;\n      });\n\n      console.log(forecast);\n      this.setState({\n        temperature: response.main.temp,\n        city: response.name,\n        country: response.sys.country,\n        description: response.weather[0].main,\n        icon: response.weather[0].icon,\n        forecast: {\n          day1: { \n            name: getDayName(forecast_response.list[1].dt_txt),\n            tmp_max: forecast_response.list[1].main.temp_max,\n            tmp_max: forecast_response.list[1].main.temp_min,\n            icon: forecast_response.list[1].weather[0].icon,\n          },\n          day2: { \n            name: getDayName(forecast_response.list[2].dt_txt),\n            tmp_max: forecast_response.list[2].main.temp_max,\n            tmp_max: forecast_response.list[2].main.temp_min,\n            icon: forecast_response.list[2].weather[0].icon,\n          },\n          day3: { \n            name: getDayName(forecast_response.list[3].dt_txt),\n            tmp_max: forecast_response.list[3].main.temp_max,\n            tmp_max: forecast_response.list[3].main.temp_min,\n            icon: forecast_response.list[3].weather[0].icon,\n          },\n          day4: { \n            name: getDayName(forecast_response.list[4].dt_txt),\n            tmp_max: forecast_response.list[4].main.temp_max,\n            tmp_max: forecast_response.list[4].main.temp_min,\n            icon: forecast_response.list[4].weather[0].icon,\n          },\n          day5: { \n            name: getDayName(forecast_response.list[5].dt_txt),\n            tmp_max: forecast_response.list[5].main.temp_max,\n            tmp_max: forecast_response.list[5].main.temp_min,\n            icon: forecast_response.list[5].weather[0].icon,\n          },\n        },\n        error: \"\"\n      })\n      console.log(this.state);\n    } else {\n      this.setState({\n        error: \"Please input search values...\"\n      })\n    }\n  }\n\n  componentDidMount = () => {\n    this.getWeather();\n  }\n  \n  render() {\n    return (\n      <div className=\"box\">\n      \t<Today \n          temperature={this.state.temperature} \n          city={this.state.city} \n          country={this.state.country} \n          description={this.state.description} \n          icon={this.state.icon} \n        />\n      \t<div className='forecast'>\n          <li>\n            <Day \n              dayname={this.state.forecast.day1.name}\n              tmpMax={this.state.forecast.day1.tmp_max}\n              tmpMin={this.state.forecast.day1.tmp_min}\n              iconName={this.state.forecast.day1.icon}\n               />\n            <Day \n              dayname={this.state.forecast.day2.name}\n              tmpMax={this.state.forecast.day2.tmp_max}\n              tmpMin={this.state.forecast.day2.tmp_min}\n              iconName={this.state.forecast.day2.icon}\n               />\n            <Day \n              dayname={this.state.forecast.day3.name}\n              tmpMax={this.state.forecast.day3.tmp_max}\n              tmpMin={this.state.forecast.day3.tmp_min}\n              iconName={this.state.forecast.day3.icon}\n               />\n            <Day \n              dayname={this.state.forecast.day4.name}\n              tmpMax={this.state.forecast.day4.tmp_max}\n              tmpMin={this.state.forecast.day4.tmp_min}\n              iconName={this.state.forecast.day4.icon}\n               />\n            <Day \n              dayname={this.state.forecast.day5.name}\n              tmpMax={this.state.forecast.day5.tmp_max}\n              tmpMin={this.state.forecast.day5.tmp_min}\n              iconName={this.state.forecast.day5.icon}\n               />\n              \n          </li>\n        </div>\n     \n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}